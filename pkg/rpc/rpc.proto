syntax = "proto3";

package rpc;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "HTTP gateway for GRPC service";
  };
  base_path: ":8081";
  
};

service GRPC {
	rpc GetVersion(google.protobuf.Empty) returns (Version){
		option (google.api.http) = {
            get: "/api/version"
          };
	}

	rpc GetValue(StateMessage) returns (StateMessage){
		option (google.api.http) = {
			post: "/api/get",
			body: "*"
		};
	}

	rpc PutValue(StateMessage) returns (StateMessage){
		option (google.api.http) = {
			post: "/api/put",
			body: "*"
		};
	}

	rpc ServerStream(google.protobuf.Empty) returns(stream Message){}
}

message Version {
	string sem_ver = 1;
	string git_commit = 2;
}

message Message {
	string message = 1;
}

message StateMessage {
	string key = 1;
	string value = 2;
}